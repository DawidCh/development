heat_template_version: 2013-05-23

description: k5adapter sample heat 

parameters:
  Az:
    type: string
    description: availability zone
  KeyName:
    type: string
    description: Name of an existing key pair to use for the server
  FlavorType:
    type: string
    description: Flavor for the server to be created
  ImageId:
    type: string
    description: Image ID or image name to use for the server
  PrivateNetworkId:
    type: string
    description: network uuid
  VmName:
    type: string
    description: name of vm
  SecurityGroupName:
    type: string
    description: security group
  AdminPassword:
    type: string
  SubnetId:
    type: string
    description: subnet on which the load balancer will be located
  PublicNetworkId:
    type: string
    description: UUID of a Neutron external network
resources:
  sys-vol:
    type: OS::Cinder::Volume
    properties:
      name: "sys-vol"
      size: 80
      availability_zone: { get_param: Az }
      volume_type: "M1"
      image : { get_param: ImageId }
  server:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: KeyName }
      image: { get_param: ImageId }
      flavor: { get_param: FlavorType }
      networks:
        - port: { get_resource: instanceport }
      name: { get_param: VmName }
      metadata: {"admin_pass": { get_param: AdminPassword }}
      availability_zone: { get_param: Az }
      block_device_mapping: [{"device_name": "/dev/vda","volume_size": "100", "volume_id": {get_resource: sys-vol}}]
  instanceport:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: PrivateNetworkId }
      security_groups: { get_param: SecurityGroupName }
      fixed_ips:
        - subnet_id: { get_param: SubnetId }
  instancepublic:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: PublicNetworkId }
      port_id: { get_resource: instanceport }
outputs:
  KP_Out:
    description: Key pair name
    value: { get_attr: [server, networks] }
    