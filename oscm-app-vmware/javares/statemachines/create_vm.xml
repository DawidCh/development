<states class="org.oscm.app.vmware.business.statemachine.CreateActions">
  <state id="BEGIN" action="createInstanceName">
    <event id="success" state="CREATE_VM" />
    <event id="failed" state="ERROR" />
  </state>
  <state id="CREATE_VM" action="createVM">
    <event id="creating" state="CREATING" />
    <event id="failed" state="ERROR" />
  </state>
  <state id="CREATING" action="inspectTaskResult">
    <event id="success" state="CONFIGURE" />
    <event id="running" state="CREATING" />
    <event id="queued" state="CREATING" />
    <event id="error" state="REPEAT_FAILED_STATE" />
  </state>
  <state id="CONFIGURE" action="configureVM">
    <event id="configuring" state="CONFIGURING" />
    <event id="failed" state="ERROR" />
  </state>
  <state id="CONFIGURING" action="inspectTaskResult">
    <event id="success" state="START" />
    <event id="running" state="CONFIGURING" />
    <event id="queued" state="CONFIGURING" />
    <event id="error" state="REPEAT_FAILED_STATE" />
  </state>
  <state id="START" action="startVM">
    <event id="starting" state="STARTING" />
    <event id="failed" state="ERROR" />
  </state>
  <state id="STARTING" action="inspectTaskResult">
    <event id="success" state="RUNNING" />
    <event id="running" state="STARTING" />
    <event id="queued" state="STARTING" />
    <event id="error" state="REPEAT_FAILED_STATE" />
  </state>
  <state id="RUNNING" action="checkVMRunning">
    <event id="not running" state="RUNNING" />
    <event id="running" state="CONFIGURE_NETWORK" />
    <event id="failed" state="ERROR" />
  </state>
  <state id="CONFIGURE_NETWORK" action="configureNetworkAdapter">
    <event id="configuring" state="CONFIGURING_NETWORK" />
    <event id="failed" state="ERROR" />
  </state>
  <state id="CONFIGURING_NETWORK" action="inspectTaskResult">
    <event id="success" state="EXECUTE_SCRIPT" />
    <event id="running" state="CONFIGURING_NETWORK" />
    <event id="queued" state="CONFIGURING_NETWORK" />
    <event id="error" state="REPEAT_FAILED_STATE" />
  </state>
  <state id="EXECUTE_SCRIPT" action="executeScript">
    <event id="success" state="SUSPEND_PROVISIONING_AFTER_CREATION" />
    <event id="failed" state="ERROR" />
  </state>
  <state id="SUSPEND_PROVISIONING_AFTER_CREATION" action="suspendAfterCreation">
    <event id="success" state="END" />
    <event id="failed" state="ERROR" />
  </state>
  <state id="END" action="finalizeProvisioning">
    <event id="success" state="SUCCESS" />
    <event id="failed" state="ERROR" />
  </state>
</states>